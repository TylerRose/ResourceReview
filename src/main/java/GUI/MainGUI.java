package GUI;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import review.Source;
import review.SendEmail;
import review.RRMain;
import java.awt.Color;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Scanner;

/**
 *
 * @author tyler
 */
public class MainGUI extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    private static MainGUI instance = null;
    public static float posX;
    public static float posY;
    private static StringBuilder log;
    private static String lastLog;

    private MainGUI() {
        instance = this;
        initComponents();
        txtMonth.setForeground(Color.GRAY);
        txtYear.setForeground(Color.GRAY);
        posX = instance.getAlignmentX();
        posY = instance.getAlignmentY();
        log = new StringBuilder();
        print("--Console--");
        //Set up the specialist list in the gui
        FileInputStream specialists = null;
        RRMain.specialistList = new ArrayList<>();
        try {
            new File(RRMain.resourceReviewsPath + "Specialists.txt").createNewFile();
            specialists = new FileInputStream(new File(RRMain.resourceReviewsPath + "Specialists.txt"));
        } catch (IOException e) {
            MainGUI.println("Could not access specialists file.");
        }
        Scanner specialistIn = new Scanner(specialists);
        String specialist = "";
        while (specialistIn.hasNextLine()) {
            specialist = specialistIn.nextLine();
            RRMain.specialistList.add(specialist);
            spnSpecialist.addItem(specialist);
        }
        if (RRMain.specialistList.isEmpty()) {
            throw new RuntimeException("Specialist list must not be empty");
        }
        spnSpecialist.requestFocus();
    }

    public static MainGUI getInstance() {
        if (instance == null) {
            instance = new MainGUI();
        }
        return instance;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnReadOnly = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btnErrorsOnly = new javax.swing.JButton();
        btnRunProd = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtYear = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        spnSpecialist = new javax.swing.JComboBox<>();
        txtMonth = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        btnTestMode = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtLog = new javax.swing.JTextArea();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();

        btnReadOnly.setText("No Dates Added Test");
        btnReadOnly.setToolTipText("Test Mode but no dates are updated");
        btnReadOnly.setName(""); // NOI18N
        btnReadOnly.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnReadOnlyMouseClicked(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Resource Review Automation");
        setResizable(false);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentMoved(java.awt.event.ComponentEvent evt) {
                formComponentMoved(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel4.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentMoved(java.awt.event.ComponentEvent evt) {
                jPanel4ComponentMoved(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabel1.setText("Run a Resource Review");

        btnErrorsOnly.setBackground(new java.awt.Color(153, 153, 255));
        btnErrorsOnly.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        btnErrorsOnly.setText("Run Corrected Errors Only");
        btnErrorsOnly.setToolTipText("Test Mode but no dates are updated");
        btnErrorsOnly.setName(""); // NOI18N
        btnErrorsOnly.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnErrorsOnlyMouseClicked(evt);
            }
        });

        btnRunProd.setBackground(new java.awt.Color(153, 153, 255));
        btnRunProd.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        btnRunProd.setText("Production Run");
        btnRunProd.setToolTipText("Test Mode but no dates are updated");
        btnRunProd.setName(""); // NOI18N
        btnRunProd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRunProdMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnErrorsOnly, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnRunProd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnErrorsOnly)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRunProd)
                .addContainerGap(74, Short.MAX_VALUE))
        );

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        jLabel3.setText("Year to Run");

        txtYear.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        txtYear.setText("Year");
        txtYear.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtYearCaretUpdate(evt);
            }
        });
        txtYear.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtYearFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtYearFocusLost(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        jLabel4.setText("Specialist");

        spnSpecialist.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        spnSpecialist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spnSpecialistActionPerformed(evt);
            }
        });

        txtMonth.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        txtMonth.setText("Month Number");
        txtMonth.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtMonthCaretUpdate(evt);
            }
        });
        txtMonth.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtMonthFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMonthFocusLost(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        jLabel5.setText("Month to Run");

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        jLabel7.setText("(Skip for tests)");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(14, 14, 14)
                        .addComponent(jLabel7))
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(spnSpecialist, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtMonth)
                    .addComponent(txtYear)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(spnSpecialist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnTestMode.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        btnTestMode.setText("Run from 0test0");
        btnTestMode.setToolTipText("Run the review in test mode");
        btnTestMode.setName(""); // NOI18N
        btnTestMode.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnTestModeMouseClicked(evt);
            }
        });
        btnTestMode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTestModeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnTestMode, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnTestMode)
                .addContainerGap(112, Short.MAX_VALUE))
        );

        txtLog.setEditable(false);
        txtLog.setColumns(20);
        txtLog.setFont(new java.awt.Font("Consolas", 0, 16)); // NOI18N
        txtLog.setLineWrap(true);
        txtLog.setRows(5);
        txtLog.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setViewportView(txtLog);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jMenu3.setText("Resource Review Version 2.0.3");
        jMenu3.setEnabled(false);
        jMenuBar2.add(jMenu3);

        setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        Source.close = true;
    }//GEN-LAST:event_formWindowClosing

    private void btnReadOnlyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnReadOnlyMouseClicked
        if (validInput(true)) {
            RRMain.writer.readOnly = true;
            SendEmail.retryLogin = true;
            new LoginGUI().setVisible(true);
        }
    }//GEN-LAST:event_btnReadOnlyMouseClicked

    private void btnErrorsOnlyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnErrorsOnlyMouseClicked
        if (validInput(false)) {
            SendEmail.testMode = false;
            RRMain.writer.readOnly = false;
            RRMain.errorsOnly = true;
            SendEmail.retryLogin = true;
            new ConfirmationGUI().setVisible(true);
        }
    }//GEN-LAST:event_btnErrorsOnlyMouseClicked

    private void btnRunProdMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRunProdMouseClicked
        if (validInput(false)) {
            SendEmail.testMode = false;
            RRMain.writer.readOnly = false;
            RRMain.errorsOnly = false;
            SendEmail.retryLogin = true;
            new ConfirmationGUI().setVisible(true);
        }
    }//GEN-LAST:event_btnRunProdMouseClicked

    private void jPanel4ComponentMoved(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel4ComponentMoved
        posX = instance.getAlignmentX();
        posY = instance.getAlignmentY();
    }//GEN-LAST:event_jPanel4ComponentMoved

    private void formComponentMoved(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentMoved
        posX = instance.getAlignmentX();
        posY = instance.getAlignmentY();
    }//GEN-LAST:event_formComponentMoved

    private void txtMonthFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMonthFocusLost
        if (txtMonth.getText().equals("")) {
            txtMonth.setForeground(Color.GRAY);
            txtMonth.setText("Month Number");
            txtMonth.setBackground(Color.WHITE);
        }
    }//GEN-LAST:event_txtMonthFocusLost

    private void txtMonthFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMonthFocusGained
        txtMonth.setForeground(Color.BLACK);
        if (txtMonth.getText().equals("Month Number")) {
            txtMonth.setText("");
            txtMonth.setBackground(Color.PINK);
        }
    }//GEN-LAST:event_txtMonthFocusGained

    private void txtMonthCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtMonthCaretUpdate
        try {
            int month = Integer.parseInt(txtMonth.getText());
            if (month < -1 || month > 13 || month == 0) {
                txtMonth.setBackground(Color.PINK);
            } else {
                txtMonth.setBackground(Color.WHITE);
            }
        } catch (NumberFormatException nfe) {
            txtMonth.setBackground(Color.PINK);
        }
    }//GEN-LAST:event_txtMonthCaretUpdate

    private void spnSpecialistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spnSpecialistActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_spnSpecialistActionPerformed

    private void txtYearFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtYearFocusLost
        if (txtYear.getText().equals("")) {
            txtYear.setForeground(Color.GRAY);
            txtYear.setText("Year");
            txtYear.setBackground(Color.WHITE);
        }
    }//GEN-LAST:event_txtYearFocusLost

    private void txtYearFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtYearFocusGained
        txtYear.setForeground(Color.BLACK);
        if (txtYear.getText().equals("Year")) {
            txtYear.setText("");
            txtYear.setBackground(Color.PINK);
        }
    }//GEN-LAST:event_txtYearFocusGained

    private void txtYearCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtYearCaretUpdate
        try {
            int year = Integer.parseInt(txtYear.getText());
            if (year > 0) {
                txtYear.setBackground(Color.WHITE);
            } else {
                txtYear.setBackground(Color.PINK);
            }
        } catch (NumberFormatException nfe) {
            txtYear.setBackground(Color.PINK);
        }
    }//GEN-LAST:event_txtYearCaretUpdate

    private void btnTestModeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTestModeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnTestModeActionPerformed

    private void btnTestModeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTestModeMouseClicked
        if (validInput(true)) {
            SendEmail.testMode = true;
            SendEmail.retryLogin = true;
            //new LoginGUI().setVisible(true);
            new LoginGUI().setVisible(true);
        }
    }//GEN-LAST:event_btnTestModeMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        //Initialize vars and files
        try {
            initialization();
        } catch (RuntimeException e) {
            printError("" + e.getMessage());
        }
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainGUI().setVisible(true);
            }
        });

    }

    /**
     * A method to print formatted errors to console
     *
     * @param message the message to print
     */
    public static void printError(String message) {

        MainGUI.println("\n******");
        MainGUI.println("ERROR: " + message);
        MainGUI.println("******\n");
    }

    /**
     * Initialize variables and files needed by the program
     */
    public static void initialization() {
        //FileInputStream specialists = null;
        //RRMain.specialistList = new ArrayList<>();
        RRMain.resourceReviewsPath = "C:\\ResourceReviewsAutomation\\";
        //RRMain.powershellScript = "C:\\ResourceReviewsAutomation\\ps\\";
//        try {
//            new File(RRMain.resourceReviewsPath + "Specialists.txt").createNewFile();
//            specialists = new FileInputStream(new File(RRMain.resourceReviewsPath + "Specialists.txt"));
//        } catch (IOException e) {
//            MainGUI.println("Could not access specialists file.");
//        }
//        if (specialists != null) {
//            Scanner specialistIn = new Scanner(specialists);
//            while (specialistIn.hasNextLine()) {
//                RRMain.specialistList.add(specialistIn.nextLine());
//            }
//        }
//        if (RRMain.specialistList.isEmpty()) {
//            throw new RuntimeException("Specialist list must not be empty");
//        }
        //Create any paths that didn't exist
        new File(RRMain.resourceReviewsPath).mkdirs();
        //new File(RRMain.powershellScript).mkdirs();
    }

    public String getSpnSpecialist() {
        return (String) spnSpecialist.getSelectedItem();
    }

    public String getTxtYear() {
        return txtYear.getText();
    }

    public String getTxtMonth() {
        return txtMonth.getText();
    }

    public static void println(String str) {
        lastLog = str;
        log.append("\n").append(str).append("\n");
        instance.txtLog.setText(log.toString());
        instance.txtLog.setCaretPosition(instance.txtLog.getDocument().getLength());
    }

    public static void println(double number) {
        lastLog = number + "";
        log.append("\n").append(number).append("\n");
        instance.txtLog.setText(log.toString());
        instance.txtLog.setCaretPosition(instance.txtLog.getDocument().getLength());
    }

    public static void print(String str) {
        lastLog = str;
        log.append(str);
        instance.txtLog.setText(log.toString());
        instance.txtLog.setCaretPosition(instance.txtLog.getDocument().getLength());
    }

    public static void print(double number) {
        lastLog = number + "";
        log.append(number);
        instance.txtLog.setText(log.toString());
        instance.txtLog.setCaretPosition(instance.txtLog.getDocument().getLength());
    }

    public static void replaceLastLog(String str) {
        log.delete(log.length() - lastLog.length() - 1, log.length());
        lastLog = str;
        log.append(lastLog).append("\n");
        instance.txtLog.setText(log.toString());
        instance.txtLog.setCaretPosition(instance.txtLog.getDocument().getLength());
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnErrorsOnly;
    private javax.swing.JButton btnReadOnly;
    private javax.swing.JButton btnRunProd;
    private javax.swing.JButton btnTestMode;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> spnSpecialist;
    private javax.swing.JTextArea txtLog;
    private javax.swing.JTextField txtMonth;
    private javax.swing.JTextField txtYear;
    // End of variables declaration//GEN-END:variables

    private boolean validInput(boolean test) {
        //return false if either box is pink or contains default value
        return !((txtYear.getBackground() == Color.PINK
                || txtMonth.getBackground() == Color.PINK)
                || (!test && txtYear.getText().equals("Year"))
                || txtMonth.getText().equals("Month Number"));
    }
}
